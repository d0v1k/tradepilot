from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from flask_login import LoginManager
from apscheduler.schedulers.background import BackgroundScheduler
import atexit

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://username:password@localhost/trading_dashboard'
db = SQLAlchemy(app)
bcrypt = Bcrypt(app)
login_manager = LoginManager(app)
login_manager.login_view = 'login'

def reset_equity():
    today = datetime.utcnow().date()
    users = UserData.query.all()
    for user in users:
        if user.last_update_date < today:
            user.reset_equity()

scheduler = BackgroundScheduler()
scheduler.add_job(func=reset_equity, trigger="cron", hour=23, minute=59)  # Adjust the time as needed

@app.before_first_request
def initialize_scheduler():
    if not scheduler.running:
        scheduler.start()

# Shut down the scheduler when exiting the app
atexit.register(lambda: scheduler.shutdown())

from your_project import routes  # Import routes from a separate module

if __name__ == '__main__':
    app.run(debug=True)
